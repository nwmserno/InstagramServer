const sessionManager = require('./SessionManager');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

// ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
const STORIES_HISTORY_FILE = path.join(__dirname, '..', 'data', 'StoriesHistory.json');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
function loadStoriesHistory() {
  try {
    if (fs.existsSync(STORIES_HISTORY_FILE)) {
      const data = fs.readFileSync(STORIES_HISTORY_FILE, 'utf8');
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
      if (data.trim() === '') {
        console.log('StoriesHistory.json is empty, returning empty object');
        return {};
      }
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!data.trim().startsWith('{') || !data.trim().endsWith('}')) {
        console.log('StoriesHistory.json has incomplete data, returning empty object');
        return {};
      }
      
      const parsed = JSON.parse(data);
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô object ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (typeof parsed !== 'object' || parsed === null) {
        console.log('StoriesHistory.json is not a valid object, returning empty object');
        return {};
      }
      return parsed;
    }
  } catch (error) {
    console.error('Error loading stories history:', error);
    console.error('File content might be corrupted');
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î error ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    try {
      if (fs.existsSync(STORIES_HISTORY_FILE)) {
        // ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢
        const corruptedData = fs.readFileSync(STORIES_HISTORY_FILE, 'utf8');
        console.error('Corrupted file content:', corruptedData.substring(0, 200) + '...');
        
        fs.unlinkSync(STORIES_HISTORY_FILE);
        console.log('Deleted corrupted StoriesHistory.json');
      }
    } catch (deleteError) {
      console.error('Error deleting corrupted file:', deleteError);
    }
  }
  return {};
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
function saveStoriesHistory(history) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ history ‡πÄ‡∏õ‡πá‡∏ô object ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (typeof history !== 'object' || history === null) {
      console.error('Invalid history data, cannot save');
      return;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    const backupFile = STORIES_HISTORY_FILE + '.backup';
    if (fs.existsSync(STORIES_HISTORY_FILE)) {
      try {
        fs.copyFileSync(STORIES_HISTORY_FILE, backupFile);
      } catch (backupError) {
        console.error('Error creating backup:', backupError);
      }
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    const jsonData = JSON.stringify(history, null, 2);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ JSON string ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    try {
      JSON.parse(jsonData);
    } catch (parseError) {
      console.error('Generated JSON is invalid:', parseError);
      throw new Error('Invalid JSON data generated');
    }
    
    // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ö‡∏ö atomic (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏õ‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô)
    const tempFile = STORIES_HISTORY_FILE + '.tmp';
    fs.writeFileSync(tempFile, jsonData);
    
    // ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
    fs.renameSync(tempFile, STORIES_HISTORY_FILE);
    
    // ‡∏•‡∏ö backup ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    if (fs.existsSync(backupFile)) {
      try {
        fs.unlinkSync(backupFile);
      } catch (deleteError) {
        console.error('Error deleting backup:', deleteError);
      }
    }
  } catch (error) {
    console.error('Error saving stories history:', error);
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î error ‡πÉ‡∏´‡πâ restore ‡∏à‡∏≤‡∏Å backup
    const backupFile = STORIES_HISTORY_FILE + '.backup';
    if (fs.existsSync(backupFile)) {
      try {
        fs.copyFileSync(backupFile, STORIES_HISTORY_FILE);
        console.log('Restored from backup');
      } catch (restoreError) {
        console.error('Error restoring from backup:', restoreError);
      }
    }
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà
async function checkNewStories(username) {
  try {
    // ‡πÉ‡∏ä‡πâ SessionManager ‡∏û‡∏£‡πâ‡∏≠‡∏° retry mechanism
    return await sessionManager.executeWithRetry(async (ig) => {
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const user = await ig.user.searchExact(username);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ public ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (user.is_private) {
      throw new Error('üîí ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (Private Account)\n\nüì± ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß\n\nüí° ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\n‚Ä¢ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\n‚Ä¢ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà ‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ\n‚Ä¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞');
    }
    
    // ‡∏î‡∏∂‡∏á‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
    const stories = await ig.feed.userStory(user.pk).items();
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
    const storiesHistory = loadStoriesHistory();
    const userHistory = storiesHistory[username] || [];
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (stories.length === 0) {
      return {
        username: user.username,
        full_name: user.full_name,
        has_stories: false,
        story_count: 0,
        stories: [],
        new_stories: [],
        message: 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà\n\nüì± ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå\n\nüí° ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\n‚Ä¢ ‡∏•‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á\n‚Ä¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà'
      };
    }
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
    const storyData = stories.map(story => ({
      id: story.id,
      media_type: story.media_type === 1 ? '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' : '‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠',
      taken_at: new Date(story.taken_at * 1000).toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' }),
      taken_at_timestamp: story.taken_at,
      url: story.media_type === 1 ? story.image_versions2?.candidates?.[0]?.url : story.video_versions?.[0]?.url,
      duration: story.media_type === 2 ? story.video_duration : null
    }));
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà
    const newStories = [];
    const currentStoryIds = storyData.map(story => story.id);
    
    for (const story of storyData) {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏´‡πá‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const isNew = !userHistory.some(historyStory => historyStory.id === story.id);
      
      if (isNew) {
        newStories.push(story);
      }
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà
    const updatedHistory = storyData.map(story => ({
      id: story.id,
      taken_at_timestamp: story.taken_at_timestamp,
      checked_at: Math.floor(Date.now() / 1000)
    }));
    
    storiesHistory[username] = updatedHistory;
    saveStoriesHistory(storiesHistory);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    let message;
    if (newStories.length === 0) {
      message = `‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà\n\nüì± ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ @${user.username} ‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà ${storyData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà\n\nüí° ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\n‚Ä¢ ‡∏•‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á\n‚Ä¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà`;
    } else if (newStories.length === storyData.length) {
      message = `üéâ ‡∏û‡∏ö‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ${newStories.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£!\n\nüì± ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ @${user.username} ‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n\n‚ú® ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà:\n${newStories.map((story, index) => `‚Ä¢ ${index + 1}. ${story.media_type} - ${story.taken_at}`).join('\n')}`;
    } else {
      message = `üéâ ‡∏û‡∏ö‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ${newStories.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£!\n\nüì± ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ @${user.username} ‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${storyData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n‚ú® ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà:\n${newStories.map((story, index) => `‚Ä¢ ${index + 1}. ${story.media_type} - ${story.taken_at}`).join('\n')}`;
    }
    
    return {
      username: user.username,
      full_name: user.full_name,
      has_stories: true,
      story_count: storyData.length,
      stories: storyData,
      new_stories: newStories,
      new_story_count: newStories.length,
      message: message
    };
    });
    
  } catch (error) {
    console.error(`Error checking stories for ${username}:`, error.message);
    throw error;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà
async function sendStoriesEmail(username, storyInfo, email, isNotification = false, changes = null) {
  try {
    const nodemailer = require('nodemailer');
    let transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
      }
    });

    if (!email) return;

    const now = new Date();
    let subject, textContent;
    
    if (changes) {
      // ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
      subject = `[‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á] ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: @${username}`;
      textContent = `\n==== ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà ====\n\n`;
      textContent += `Username: @${username}\n`;
      textContent += `‡∏ä‡∏∑‡πà‡∏≠: ${storyInfo.full_name}\n`;
      textContent += `‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${storyInfo.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      textContent += `‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á:\n${changes}`;
      textContent += `‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}\n\n`;
      textContent += `‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà\n`;
      textContent += `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker\n`;
    } else if (isNotification) {
      // ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö scheduled
      subject = `[‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥] ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: @${username}`;
      textContent = `\n==== ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ - ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ====\n\n`;
      textContent += `Username: @${username}\n`;
      textContent += `‡∏ä‡∏∑‡πà‡∏≠: ${storyInfo.full_name}\n`;
      textContent += `‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${storyInfo.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      textContent += `‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}\n\n`;
      textContent += `‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ\n`;
      textContent += `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker\n`;
    } else {
      // ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
      subject = `‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: @${username}`;
      textContent = `\n==== ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ====\n\n`;
      textContent += `Username: @${username}\n`;
      textContent += `‡∏ä‡∏∑‡πà‡∏≠: ${storyInfo.full_name}\n`;
      textContent += `‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${storyInfo.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      textContent += `‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}\n\n`;
      textContent += `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker\n`;
    }
    
    let htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <style>
          body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; padding: 20px; background-color: #f5f5f5; }
          .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); overflow: hidden; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }
          .header h1 { margin: 0; font-size: 24px; font-weight: 300; }
          .content { padding: 30px; }
          .story-info { background: #f8f9fa; border-radius: 8px; padding: 20px; margin-bottom: 25px; border-left: 4px solid #667eea; }
          .story-item { background: white; border: 1px solid #e9ecef; border-radius: 8px; padding: 15px; margin-bottom: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.05); }
          .story-type { display: inline-block; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; }
          .type-image { background: #d4edda; color: #155724; }
          .type-video { background: #cce5ff; color: #004085; }
          .new-badge { background: #dc3545; color: white; padding: 2px 6px; border-radius: 3px; font-size: 10px; margin-left: 8px; }
          .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #666; border-top: 1px solid #e9ecef; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üì± ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà</h1>
          </div>
          <div class="content">
            <div class="story-info">
              <h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà</h3>
              <p><strong>Username:</strong> @${storyInfo.username}</p>
              <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${storyInfo.full_name}</p>
              <p><strong>‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà:</strong> ${storyInfo.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
              <p><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:</strong> ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}</p>
            </div>
            
            <h3 style="color: #333; margin-bottom: 20px;">üì∏ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà</h3>
    `;

    if (storyInfo.new_story_count > 0) {
      storyInfo.new_stories.forEach((story, index) => {
        const typeClass = story.media_type === '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' ? 'type-image' : 'type-video';
        
        htmlContent += `
          <div class="story-item">
            <div style="margin-bottom: 10px;">
              <span class="story-type ${typeClass}">${story.media_type}</span>
              <span class="new-badge">‡πÉ‡∏´‡∏°‡πà</span>
              ${story.duration ? `<span style="margin-left: 10px; color: #666;">‚è±Ô∏è ${story.duration}s</span>` : ''}
            </div>
            <p><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå:</strong> ${story.taken_at}</p>
            ${story.url ? `<p><strong>‡∏•‡∏¥‡∏á‡∏Å‡πå:</strong> <a href="${story.url}" target="_blank">‡∏î‡∏π‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà</a></p>` : ''}
          </div>
        `;
      });
    } else {
      htmlContent += `
        <div class="story-item">
          <p style="text-align: center; color: #666; font-style: italic;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà</p>
        </div>
      `;
    }

    htmlContent += `
          </div>
          <div class="footer">
            <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker</p>
            <p style="font-size: 12px; margin-top: 10px;">üìß ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
          </div>
        </div>
      </body>
      </html>
    `;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á plain text version ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
    if (!changes && !isNotification) {
      textContent += `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà:\n`;
      if (storyInfo.new_story_count > 0) {
      storyInfo.new_stories.forEach((story, index) => {
        textContent += `${index + 1}. ${story.media_type} [‡πÉ‡∏´‡∏°‡πà]\n`;
        textContent += `   ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå: ${story.taken_at}\n`;
        if (story.duration) textContent += `   ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß: ${story.duration} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\n`;
        textContent += `\n`;
      });
    } else {
      textContent += `‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà\n`;
      }
    }

    await transporter.sendMail({
      from: `IG Story Checker <${process.env.EMAIL_USER}>`,
      to: email,
      subject,
      text: textContent,
      html: htmlContent
    });

  } catch (error) {
    console.error('Send stories email error:', error);
    throw error;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏≤‡∏¢ username ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö stories
async function sendBulkStoriesEmail(usersData, email, isNotification = false, changes = null) {
  try {
    const nodemailer = require('nodemailer');
    let transporter = nodemailer.createTransporter({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
      }
    });

    if (!email || !usersData || usersData.length === 0) return;

    const now = new Date();
    let subject, textContent;
    
    if (changes) {
      // ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
      subject = `[‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á] ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${usersData.length} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ`;
      textContent = `\n==== ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà ====\n\n`;
      textContent += `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${usersData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      textContent += `‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á:\n${changes}\n`;
      textContent += `‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}\n\n`;
      textContent += `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà:\n`;
      usersData.forEach((user, index) => {
        textContent += `${index + 1}. @${user.username} (${user.full_name}) - ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${user.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      });
      textContent += `\n‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà\n`;
      textContent += `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker\n`;
    } else if (isNotification) {
      // ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö scheduled
      subject = `[‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥] ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${usersData.length} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ`;
      textContent = `\n==== ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ - ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ====\n\n`;
      textContent += `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${usersData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      textContent += `‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}\n\n`;
      textContent += `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà:\n`;
      usersData.forEach((user, index) => {
        textContent += `${index + 1}. @${user.username} (${user.full_name}) - ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${user.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      });
      textContent += `\n‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ\n`;
      textContent += `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker\n`;
    } else {
      // ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
      subject = `‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${usersData.length} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ`;
      textContent = `\n==== ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ====\n\n`;
      textContent += `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${usersData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      textContent += `‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}\n\n`;
      textContent += `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà:\n`;
      usersData.forEach((user, index) => {
        textContent += `${index + 1}. @${user.username} (${user.full_name}) - ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà: ${user.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
      });
      textContent += `\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker\n`;
    }

    let htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <style>
          body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; padding: 20px; background-color: #f5f5f5; }
          .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); overflow: hidden; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }
          .header h1 { margin: 0; font-size: 24px; font-weight: 300; }
          .content { padding: 30px; }
          .summary { background: #f8f9fa; border-radius: 8px; padding: 20px; margin-bottom: 25px; border-left: 4px solid #667eea; }
          .user-item { background: white; border: 1px solid #e9ecef; border-radius: 8px; padding: 15px; margin-bottom: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.05); }
          .story-item { background: #f8f9fa; border: 1px solid #e9ecef; border-radius: 8px; padding: 10px; margin: 5px 0; }
          .story-type { display: inline-block; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; }
          .type-image { background: #d4edda; color: #155724; }
          .type-video { background: #cce5ff; color: #004085; }
          .new-badge { background: #dc3545; color: white; padding: 2px 6px; border-radius: 3px; font-size: 10px; margin-left: 8px; }
          .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #666; border-top: 1px solid #e9ecef; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üì± ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà</h1>
          </div>
          <div class="content">
            <div class="summary">
              <h3>üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
              <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:</strong> ${usersData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
              <p><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:</strong> ${now.toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' })}</p>
            </div>
            
            <h3 style="color: #333; margin-bottom: 20px;">üë• ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà</h3>
    `;

    usersData.forEach((user, index) => {
      htmlContent += `
        <div class="user-item">
          <h4 style="margin: 0 0 10px 0;">${index + 1}. @${user.username}</h4>
          <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${user.full_name}</p>
          <p><strong>‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà:</strong> ${user.new_story_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
      `;
      
      if (user.new_story_count > 0 && user.new_stories) {
        htmlContent += `<h5 style="margin: 15px 0 10px 0;">üì∏ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà:</h5>`;
        user.new_stories.forEach((story, storyIndex) => {
          const typeClass = story.media_type === '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' ? 'type-image' : 'type-video';
          htmlContent += `
            <div class="story-item">
              <div style="margin-bottom: 5px;">
                <span class="story-type ${typeClass}">${story.media_type}</span>
                <span class="new-badge">‡πÉ‡∏´‡∏°‡πà</span>
                ${story.duration ? `<span style="margin-left: 10px; color: #666;">‚è±Ô∏è ${story.duration}s</span>` : ''}
              </div>
              <p style="margin: 5px 0;"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå:</strong> ${story.taken_at}</p>
              ${story.url ? `<p style="margin: 5px 0;"><strong>‡∏•‡∏¥‡∏á‡∏Å‡πå:</strong> <a href="${story.url}" target="_blank">‡∏î‡∏π‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà</a></p>` : ''}
            </div>
          `;
        });
      } else {
        htmlContent += `<p style="color: #666; font-style: italic;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà</p>`;
      }
      
      htmlContent += `</div>`;
    });

    htmlContent += `
          </div>
          <div class="footer">
            <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ IG Story Checker</p>
            <p style="font-size: 12px; margin-top: 10px;">üìß ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
          </div>
        </div>
      </body>
      </html>
    `;

    await transporter.sendMail({
      from: `IG Story Checker <${process.env.EMAIL_USER}>`,
      to: email,
      subject,
      text: textContent,
      html: htmlContent
    });

    console.log(`üìß ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏£‡∏ß‡∏° ${usersData.length} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${email}`);
  } catch (error) {
    console.error('Send bulk stories email error:', error);
    throw error;
  }
}

module.exports = {
  checkNewStories,
  sendStoriesEmail,
  sendBulkStoriesEmail
}; 